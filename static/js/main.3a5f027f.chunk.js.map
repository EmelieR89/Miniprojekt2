{"version":3,"sources":["assets/ceramics1.jpg","assets/ceramics2.jpg","assets/ceramics3.jpg","assets/ceramics4.jpg","assets/Omoss1.jpg","assets/Omoss2.jpg","assets/Omoss3.jpg","contexts/CartContext.tsx","components/Header.tsx","components/Footer.tsx","components/Card.tsx","components/ProductData.tsx","components/MainContent.tsx","components/CartPage.tsx","components/ProductPage.tsx","components/OmOss.tsx","components/FraktData.tsx","contexts/ShippingContext.tsx","components/FraktForm.tsx","contexts/UserDataContext.tsx","components/UserData.tsx","components/Payment.tsx","MockedAPI.ts","components/Beställningsbekräftelse.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CartContext","React","createContext","cart","addToCart","removeFromCart","clearCart","itemCounter","totalCost","CartProvider","props","useState","setCart","setItemCounter","setTotalCost","useEffect","countNumberOfItems","addTotalCost","sum","reduce","total","itemproduct","product","price","count","counter","numberOfItems","item","Provider","value","newCart","Object","assign","length","console","log","id","removedCart","filteredList","filter","currentProduct","children","Header","ResponsiveContext","Consumer","size","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","stylingHeader","DropButton","label","plain","dropAlign","top","dropContent","to","linkStyle","Image","src","imgStyle","Nav","Button","icon","Home","color","Favorite","cartState","Cart","marginLeft","Stack","anchor","horizontal","round","Text","height","display","margin","textDecoration","Footer","Anchor","Facebook","Instagram","Mail","Component","Card","useContext","fit","mainImg","styleParagraph","Paragraph","alignSelf","responsive","title","buttonStyles","onClick","hej","document","getElementById","className","setTimeout","replace","showCartMessage","justifyContent","productData","description","Image2","Image3","Image4","MainContent","Grid","rows","columns","gap","areas","name","start","end","map","gridArea","key","CartPage","flexStyle","width","productBox","wrap","type","primary","fill","flex","flexGrow","minHeight","ProductPage","find","match","params","OmOss","overflow","Carousel","FraktData","namn","pris","days","beskrivning","ShippingContext","shippingData","setShipping","ShippingDataProvider","selectedShipping","NaN","setShippingData","choosenShipment","FraktForm","selected","setSelected","gotToNextStep","setgoToNextStep","alignContent","Form","validate","onSubmit","frakt","RadioButton","checked","onChange","e","target","date","Date","setDate","getDate","toLocaleDateString","leveransDatum","UserDataContext","userData","setName","setEmail","setTelefon","setAddress","setZipCode","setCity","UserDataProvider","email","telefon","address","zipCode","city","setUserData","UserData","FormField","required","regexp","message","Payment","setValue","cardnr","setCardNr","isLoading","setLoading","isComplete","setComplete","totalCostAllTogether","RadioButtonGroup","options","event","autoComplete","MaskedInput","mask","placeholder","fixed","disabled","Promise","resolve","reject","then","Beställningsbekräftelse","totalCostSaved","cartSaved","Heading","max","Math","floor","random","theme","global","breakpoints","xsmall","small","medium","focus","border","colors","header","footer","icons","text","navbar","buttons","font","family","App","basename","Grommet","full","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3a5f027f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ceramics1.7e2e1023.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ceramics2.724c35e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ceramics3.6166e928.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ceramics4.ff0e63b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Omoss1.4f4cd454.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Omoss2.7e69cede.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Omoss3.23ea9f8d.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Product } from \"../components/ProductData\";\r\n\r\nexport const CartContext = React.createContext<Cart>({\r\n  cart: [],\r\n  addToCart: () => {},\r\n  removeFromCart: () => {},\r\n  clearCart: () => {},\r\n  itemCounter: 0,\r\n  totalCost: 0\r\n});\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface CartItem {\r\n  product: Product;\r\n  count: number;\r\n}\r\n\r\ninterface Cart {\r\n  cart: CartItem[];\r\n  addToCart: (product: Product) => void;\r\n  removeFromCart: (product: Product) => void;\r\n  clearCart: () => void;\r\n\r\n  itemCounter: number;\r\n  totalCost: number;\r\n}\r\n\r\nexport const CartProvider = (props: Props) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [itemCounter, setItemCounter] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n\r\n  useEffect(() => {\r\n    countNumberOfItems();\r\n    addTotalCost();\r\n  }, [cart]);\r\n\r\n  const addTotalCost = () => {\r\n    const sum = cart.reduce((total, itemproduct) => {\r\n      return total + itemproduct.product.price * itemproduct.count;\r\n    }, 0);\r\n    setTotalCost(sum);\r\n  };\r\n\r\n  const countNumberOfItems = () => {\r\n    const counter = cart.reduce((numberOfItems, item) => {\r\n      return numberOfItems + item.count;\r\n    }, 0);\r\n    setItemCounter(counter);\r\n  };\r\n\r\n  const addToCart = (product: Product) => {\r\n    const newCart: CartItem[] = Object.assign([], cart);\r\n    if (newCart.length < 1) {\r\n      setCart([{ product, count: 1 }]);\r\n      console.log(\"i cart : \" + cart);\r\n      return;\r\n    }\r\n    for (const item of newCart) {\r\n      if (item.product.id === product.id) {\r\n        item.count++;\r\n        setCart(newCart);\r\n        console.log(\"i cart : \" + cart);\r\n        return;\r\n      }\r\n    }\r\n    setCart([...cart, { product, count: 1 }]);\r\n  };\r\n\r\n  const clearCart = () => setCart([]);\r\n\r\n  const removeFromCart = (product: Product) => {\r\n    let removedCart: CartItem[] = [...cart];\r\n\r\n    for (const item of removedCart) {\r\n      if (item.product.id === product.id && item.count > 1) {\r\n        item.count--;\r\n        setCart(removedCart);\r\n        return;\r\n      }\r\n      if (item.product.id === product.id && item.count === 1) {\r\n        const filteredList = removedCart.filter(\r\n          currentProduct => currentProduct.product.id !== item.product.id\r\n        );\r\n        setCart(filteredList);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addToCart, removeFromCart, itemCounter, totalCost, clearCart }}\r\n    >\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Nav,\r\n  DropButton,\r\n  ResponsiveContext,\r\n  Image,\r\n  Button,\r\n  Stack,\r\n  Text\r\n} from \"grommet\";\r\nimport { Menu as Hamburger, Home, Cart, Favorite } from \"grommet-icons\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\n\r\ninterface Props {}\r\n\r\nexport function Header(props: Props) {\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size => (\r\n        <Box\r\n          tag=\"header\"\r\n          direction=\"row\"\r\n          align=\"center\"\r\n          justify=\"between\"\r\n          background=\"header\"\r\n          pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\r\n          elevation=\"medium\"\r\n          {...props}\r\n        >\r\n          <div style={stylingHeader}>\r\n            <DropButton\r\n              label={<Hamburger />}\r\n              plain\r\n              dropAlign={{ top: \"bottom\", right: \"right\" }}\r\n              dropContent={\r\n                <Box pad=\"large\" background=\"light-2\">\r\n                  <Link to=\"/omoss\" style={linkStyle}>\r\n                    Om oss\r\n                  </Link>\r\n                  <Link to=\"/gillade\" style={linkStyle}>\r\n                    Gillade\r\n                  </Link>\r\n                  <Link to=\"/cartpage\" style={linkStyle}>\r\n                    Cart\r\n                  </Link>\r\n                </Box>\r\n              }\r\n            />\r\n\r\n            <Link to=\"/\">\r\n              <Image src=\"./KerstinLogga.PNG\" style={imgStyle} />\r\n            </Link>\r\n          </div>\r\n          <div style={stylingHeader}>\r\n            {size !== \"xsmall\" && (\r\n              <Nav direction=\"row\" background=\"navbar\">\r\n                <Link to=\"/\">\r\n                  <Button icon={<Home />} color=\"icon\" />\r\n                </Link>\r\n                <Link to=\"/\">\r\n                  {\" \"}\r\n                  <Button icon={<Favorite />} color=\"icon\" />{\" \"}\r\n                </Link>\r\n              </Nav>\r\n            )}\r\n            <Link to=\"/cartpage\">\r\n              <CartContext.Consumer>\r\n                {cartState => (\r\n                  <div>\r\n                    {cartState.itemCounter < 1 ? (\r\n                      <Button\r\n                        icon={<Cart />}\r\n                        color=\"icon\"\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      />\r\n                    ) : (\r\n                      <Stack anchor=\"top-right\">\r\n                        <Button icon={<Cart />} color=\"icon\" />\r\n                        <Box\r\n                          background=\"#cdf9c6\"\r\n                          pad={{ horizontal: \"xsmall\" }}\r\n                          round\r\n                        >\r\n                          <Text>{cartState.itemCounter}</Text>\r\n                        </Box>\r\n                      </Stack>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </CartContext.Consumer>\r\n            </Link>\r\n          </div>\r\n        </Box>\r\n      )}\r\n    </ResponsiveContext.Consumer>\r\n  );\r\n}\r\n\r\nconst imgStyle: CSSProperties = {\r\n  height: \"8rem\",\r\n  marginLeft: \"2rem\"\r\n};\r\n\r\nconst stylingHeader: CSSProperties = {\r\n  display: \"flex\"\r\n};\r\n\r\nconst linkStyle: CSSProperties = {\r\n  margin: \"1rem\",\r\n  textDecoration: \"None\",\r\n  color: \"black\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Footer as AFooter, Anchor } from \"grommet\";\r\nimport { Facebook, Instagram, Mail } from \"grommet-icons\";\r\n\r\ninterface Props {}\r\n\r\nexport default class Footer extends Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AFooter background=\"footer\" pad=\"medium\" justify=\"center\">\r\n        <Anchor label={<Facebook />} />\r\n        <Anchor label={<Instagram />} />\r\n        <Anchor label={<Mail />} />\r\n      </AFooter>\r\n    );\r\n  }\r\n}\r\n","import React, { CSSProperties, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Image as Picture,\r\n  Paragraph,\r\n  Button,\r\n  ResponsiveContext\r\n} from \"grommet\";\r\nimport { Cart, Favorite } from \"grommet-icons\";\r\nimport { Product } from \"./ProductData\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\nexport const Card = (props: Props) => {\r\n  const { addToCart } = useContext(CartContext);\r\n\r\n  function showCartMessage() {\r\n    const hej = document.getElementById(\"addToCartMessage\");\r\n    hej!.className = \"show\";\r\n    setTimeout(function() {\r\n      hej!.className = hej!.className.replace(\"show\", \"\");\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size => (\r\n        <Box direction=\"column\" justify=\"center\" align=\"center\">\r\n          <Box>\r\n            <Picture fit=\"cover\" src={props.product.mainImg} />\r\n            <div style={styleParagraph}>\r\n              <Paragraph\r\n                alignSelf=\"center\"\r\n                margin={\r\n                  size === \"xsmall\" ? \"2px\" : size === \"small\" ? \"5px\" : \"10px\"\r\n                }\r\n                responsive\r\n                size={\r\n                  size === \"xsmall\"\r\n                    ? \"small\"\r\n                    : size === \"small\"\r\n                    ? \"medium\"\r\n                    : \"medium\"\r\n                }\r\n              >\r\n                {props.product.title}\r\n              </Paragraph>\r\n              <Paragraph \r\n              size={\r\n                size === \"xsmall\"\r\n                  ? \"small\"\r\n                  : size === \"small\"\r\n                  ? \"medium\"\r\n                  : \"medium\"\r\n              }\r\n              >{props.product.price + \" :-\"}</Paragraph>\r\n            </div>\r\n          </Box>\r\n          <div style={buttonStyles}>\r\n            <Button\r\n              icon={\r\n                <Favorite\r\n                  size={\r\n                    size === \"xsmall\"\r\n                      ? \"small\"\r\n                      : size === \"small\"\r\n                      ? \"small\"\r\n                      : \"medium\"\r\n                  }\r\n                />\r\n              }\r\n              color=\"blue\"\r\n            />\r\n            <Button\r\n              icon={\r\n                <Cart\r\n                  size={\r\n                    size === \"xsmall\"\r\n                      ? \"small\"\r\n                      : size === \"small\"\r\n                      ? \"small\"\r\n                      : \"medium\"\r\n                  }\r\n                />\r\n              }\r\n              onClick={() => {\r\n                addToCart(props.product);\r\n                showCartMessage();\r\n              }}\r\n              color=\"blue\"\r\n            />\r\n            <Link to={\"productpage/\" + props.product.id}>\r\n              <Button\r\n                label=\"Läs mer\"\r\n                size=\"small\"\r\n                color=\"#8c7b75\"\r\n                margin=\"0.3rem\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div id=\"addToCartMessage\">Produkten har lagts till i kundvagnen</div>\r\n        </Box>\r\n      )}\r\n    </ResponsiveContext.Consumer>\r\n  );\r\n};\r\n\r\nconst buttonStyles: CSSProperties = {\r\n  display: \"flex\"\r\n};\r\n\r\nconst styleParagraph: CSSProperties = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\"\r\n};\r\n","import Image from \"../assets/ceramics1.jpg\";\r\nimport Image2 from \"../assets/ceramics2.jpg\";\r\nimport Image3 from \"../assets/ceramics3.jpg\";\r\nimport Image4 from \"../assets/ceramics4.jpg\";\r\n\r\nexport interface Product {\r\n  mainImg: string;\r\n  title: string;\r\n  description: string;\r\n  id: string;\r\n  price: number;\r\n}\r\n\r\nexport const productData: Product[] = [\r\n  {\r\n    mainImg: Image,\r\n    title: \"Karaff Eva\",\r\n    description:\r\n      \"En snygg och stilren karaff som passar bra till alla drycker.\",\r\n    id: \"box1\",\r\n    price: 250\r\n  },\r\n\r\n  {\r\n    mainImg: Image2,\r\n    title: \"Skål Märta\",\r\n    description:\r\n      \"Liten skål som passar perfekt till frukost eller tillbehör. Ø ca 12cm. \",\r\n    id: \"box2\",\r\n    price: 200\r\n  },\r\n\r\n  {\r\n    mainImg: Image3,\r\n    title: \"Skål Boel\",\r\n    description:\r\n      \"En lite större skål som passar lika bra till frukosten som till soppan. Ø ca 24cm.\",\r\n    id: \"box3\",\r\n    price: 300\r\n  },\r\n\r\n  {\r\n    mainImg: Image4,\r\n    title: \"Kopp Ingrid\",\r\n    description:\r\n      \"Den perfekta kaffekoppen som är bekväm att hålla i och som håller värmen bra. \",\r\n    id: \"box4\",\r\n    price: 120\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Box, ResponsiveContext } from \"grommet\";\r\nimport { Card } from \"./Card\";\r\nimport { productData } from \"./ProductData\";\r\n\r\ninterface Props {}\r\n\r\nexport default class MainContent extends Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContext.Consumer>\r\n        {size => (\r\n          <Grid\r\n            alignSelf=\"stretch\"\r\n            justifyContent=\"center\"\r\n            margin=\"2rem\"\r\n\r\n            rows={\r\n              size === \"xsmall\"\r\n                ? [\"15rem\", \"15rem\", \"15rem\", \"15rem\"]\r\n                : size === \"small\"\r\n                ? [\"medium\", \"medium\", \"medium\",\"medium\" ]\r\n                : [\"medium\", \"medium\"]\r\n            }\r\n            columns={\r\n              size === \"xsmall\"\r\n                ? [\"15rem\"]\r\n                : size === \"small\"\r\n                ? [\"medium\"]\r\n                : [\"medium\", \"medium\"]\r\n            }\r\n            gap=\"large\"\r\n            areas={\r\n              size === \"xsmall\"\r\n                ? [\r\n                    { name: \"box1\", start: [0, 0], end: [0, 0] },\r\n                    { name: \"box2\", start: [0, 1], end: [0, 1] },\r\n                    { name: \"box3\", start: [0, 2], end: [0, 2] },\r\n                    { name: \"box4\", start: [0, 3], end: [0, 3] }\r\n                  ]: \r\n                  size === \"small\" ?\r\n                  [\r\n                    { name: \"box1\", start: [0, 0], end: [0, 0] },\r\n                    { name: \"box2\", start: [0, 1], end: [0, 1] },\r\n                    { name: \"box3\", start: [0, 2], end: [0, 2] },\r\n                    { name: \"box4\", start: [0, 3], end: [0, 3] }\r\n                  ]: \r\n                [\r\n                    { name: \"box1\", start: [0, 0], end: [1, 0] },\r\n                    { name: \"box2\", start: [1, 0], end: [1, 1] },\r\n                    { name: \"box3\", start: [0, 1], end: [0, 1] },\r\n                    { name: \"box4\", start: [1, 1], end: [1, 1] }\r\n                  ]\r\n            }\r\n          >\r\n            {productData.map(product => (\r\n              <Box\r\n                gridArea={product.id}\r\n                background=\"light-2\"\r\n                elevation=\"medium\"\r\n                key={product.id}\r\n              >\r\n                <Card product={product} />\r\n              </Box>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </ResponsiveContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { CSSProperties, useContext } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { Box, Button, Text, Image, Paragraph } from \"grommet\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport \"../index.css\"\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n\r\nexport const CartPage = (props: Props) => {\r\n  const { removeFromCart, totalCost, cart } = useContext(CartContext);\r\n\r\n  \r\n  if (cart.length >= 1) {\r\n    return (\r\n      <Box style={flexStyle} align=\"center\">\r\n        <Text margin=\"small\" size=\"large\">\r\n          Din kundvagn\r\n        </Text>\r\n        {cart.map(item => (\r\n          <Box\r\n            width=\"small\"\r\n            height=\"small\"\r\n            margin=\"small\"\r\n            elevation=\"medium\"\r\n            responsive\r\n          >\r\n            <Text>\r\n              {item.product.title + \"   \"}\r\n              {item.product.price + \" :- /st\"}\r\n            </Text>\r\n\r\n            <Image src={item.product.mainImg} fit=\"cover\" />\r\n            <div style={productBox}>\r\n              <Text>Antal: {item.count}</Text>\r\n\r\n              <Button\r\n                label=\"Remove\"\r\n                onClick={() => removeFromCart(item.product)}\r\n                color=\"buttons\"\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n          </Box>\r\n        ))}\r\n        <Box wrap={true}>\r\n          <Paragraph>Totalbelopp: {totalCost + \":-\"} </Paragraph>\r\n          <Link to=\"/userdata\">\r\n            <Button\r\n              type=\"submit\"\r\n              label=\"Nästa\"\r\n              primary={true}\r\n              color=\"buttons\"\r\n            ></Button>\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box fill={true} flex=\"grow\" align=\"center\">\r\n      <Text margin=\"small\" size=\"large\">\r\n        Din kundvagn\r\n      </Text>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst productBox: CSSProperties = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  margin: \"0.2rem\"\r\n};\r\n\r\nconst flexStyle: CSSProperties = {\r\n  display: \"flex\",\r\n  flexGrow: 1,\r\n  minHeight: \"90%\"\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Image as Picture,\r\n  Grid,\r\n  Button,\r\n  ResponsiveContext,\r\n  Text\r\n} from \"grommet\";\r\nimport { productData, Product } from \"./ProductData\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Cart } from \"grommet-icons\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport \"../index.css\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {\r\n  product: Product;\r\n}\r\n\r\nfunction showCartMessage() {\r\n  const hej = document.getElementById(\"addToCartMessage\");\r\n  hej!.className = \"show\";\r\n  setTimeout(function() {\r\n    hej!.className = hej!.className.replace(\"show\", \"\");\r\n  }, 2000);\r\n}\r\n\r\nexport function ProductPage(props: Props) {\r\n  const product = productData.find(\r\n    product => product.id === props.match.params.id\r\n  );\r\n\r\n  const { addToCart } = useContext(CartContext);\r\n\r\n  if (!product) {\r\n    return (\r\n      <Box justify=\"center\" align=\"center\" fill>\r\n        <h3>Produkten du försökte hitta finns tyvärr inte.</h3>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size => (\r\n        <Grid\r\n          responsive\r\n          justify=\"center\"\r\n          margin=\"small\"\r\n          fill=\"vertical\"\r\n          rows={size === \"xsmall\" ? [\"10rem\", \"15rem\"] : [\"xsmall\", \"medium\"]}\r\n          columns={size === \"xsmall\" ? [\"15rem\"] : [\"medium\"]}\r\n          gap=\"small\"\r\n          areas={[\r\n            { name: \"infoText\", start: [0, 0], end: [1, 0] },\r\n\r\n            { name: \"biggerPicture\", start: [0, 1], end: [1, 1] }\r\n          ]}\r\n        >\r\n          <Box justify=\"center\" gridArea=\"infoText\">\r\n            <Text>\r\n              {product.title} <br />\r\n            </Text>{\" \"}\r\n            <Text size={size === \"xsmall\" ? \"small\" : \"medium\"}>\r\n              {product.description} <br />\r\n              {product.price + \" :-\"}\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box gridArea=\"biggerPicture\">\r\n            <Picture src={product.mainImg} fit=\"contain\" />\r\n            <Button\r\n              alignSelf=\"center\"\r\n              label=\"Köp\"\r\n              color=\"light-2\"\r\n              margin=\"small\"\r\n              icon={<Cart />}\r\n              onClick={() => {\r\n                addToCart(product);\r\n                showCartMessage();\r\n              }}\r\n            />\r\n            <div id=\"addToCartMessage\">\r\n              {product.title} har lagts till i kundvagnen\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </ResponsiveContext.Consumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Carousel,\r\n  Image as Picture,\r\n  Paragraph,\r\n  ResponsiveContext\r\n} from \"grommet\";\r\nimport Image from \"../assets/Omoss1.jpg\";\r\nimport Image2 from \"../assets/Omoss2.jpg\";\r\nimport Image3 from \"../assets/Omoss3.jpg\";\r\n\r\ninterface Props {}\r\n\r\nexport default class OmOss extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <ResponsiveContext.Consumer>\r\n        {size => (\r\n          <Box align=\"center\">\r\n            <Box width=\"large\" margin=\"1.5rem\">\r\n              <Paragraph responsive margin=\"medium\" size=\"small\" fill>\r\n                Kerstins Keramik drivs av Kerstin Almkvist. Hon är utbildad\r\n                keramiker och har arbetat med detta vid sidan av sedan 2008. I\r\n                slutet av 2015 öppnade hon sin egna studio och har sedan dess\r\n                arbetat med keramik på heltid. I studion, som ligger en bit\r\n                utanför Skövde, skapar hon bruksföremål, så som koppar, fat,\r\n                tallrikar och liknande. Alla produkter är gjorda för hand.\r\n              </Paragraph>\r\n              <Box\r\n                height={size === \"xsmall\" ? \"small\" : \"medium\"}\r\n                width={size === \"xsmall\" ? \"small\" : \"medium\"}\r\n                overflow=\"hidden\"\r\n                alignSelf=\"center\"\r\n                elevation=\"medium\"\r\n                margin=\"small\"\r\n              >\r\n                <Carousel fill>\r\n                  <Picture src={Image} fit=\"cover\" />\r\n                  <Picture src={Image2} fit=\"cover\" />\r\n                  <Picture src={Image3} fit=\"cover\" />\r\n                </Carousel>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </ResponsiveContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","export interface FraktData {\r\n    namn: string\r\n    id: string\r\n    pris: number \r\n    days: number \r\n    beskrivning: string\r\n}\r\n\r\nexport const FraktData: FraktData [] = [\r\n    {\r\n        namn: 'Postnord',\r\n        id: 'frakt1',\r\n        pris: 39,\r\n        days: 2,\r\n        beskrivning: 'Postnord hämtar ditt paket och leverar till ditt närmsta utlämningsställe.',\r\n    },\r\n    {\r\n        namn: 'DHL',\r\n        id: 'frakt2',\r\n        pris: 59,\r\n        days: 1,\r\n        beskrivning: 'DHL hämtar ditt paket och leverar till ditt närmsta utlämningsställe.',\r\n    },\r\n    {\r\n        namn: 'Upphämtning',\r\n        id: 'frakt3',\r\n        pris: 0,\r\n        days: 1,\r\n        beskrivning: 'Du hämtar ditt paket i butiken på utgivet leveransdatum.',\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { FraktData } from \"../components/FraktData\";\r\n\r\nexport const ShippingContext = React.createContext<Shipping>({\r\n  shippingData: {} as ShippingData,\r\n  setShipping: () => {}\r\n});\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface ShippingData {\r\n  selectedShipping: FraktData;\r\n}\r\n\r\ninterface Shipping {\r\n  shippingData: ShippingData;\r\n  setShipping: (selectedShipping: FraktData) => void;\r\n}\r\n\r\nexport function ShippingDataProvider(props: Props) {\r\n  const [shippingData, setShippingData] = useState<ShippingData>({\r\n    selectedShipping: {\r\n      beskrivning: \"\",\r\n      days: NaN,\r\n      id: \"\",\r\n      namn: \"\",\r\n      pris: NaN\r\n    }\r\n  });\r\n\r\n  const setShipping = (choosenShipment: FraktData) => {\r\n    console.log(\"SetShipp\" + choosenShipment);\r\n\r\n    setShippingData({\r\n      selectedShipping: {\r\n        beskrivning: choosenShipment.beskrivning,\r\n        days: choosenShipment.days,\r\n        id: choosenShipment.id,\r\n        namn: choosenShipment.namn,\r\n        pris: choosenShipment.pris\r\n      }\r\n    });\r\n  };\r\n  console.log(shippingData.selectedShipping.pris + \"datan\");\r\n\r\n  return (\r\n    <ShippingContext.Provider value={{ shippingData, setShipping }}>\r\n      {props.children}\r\n    </ShippingContext.Provider>\r\n  );\r\n}\r\n","import { Box, Button, RadioButton, Text, Form } from \"grommet\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { FraktData } from \"./FraktData\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ShippingContext } from \"../contexts/ShippingContext\";\r\n\r\nexport default function FraktForm() {\r\n  const { shippingData, setShipping } = useContext(ShippingContext);\r\n\r\n  const leveransDatum = (days: number) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + days);\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  const [selected, setSelected] = React.useState(\"\");\r\n\r\n  const [gotToNextStep, setgoToNextStep] = useState(false);\r\n  function handleOnSubmit() {\r\n    setgoToNextStep(true);\r\n  }\r\n\r\n  if (gotToNextStep) {\r\n    return <Redirect to=\"/payment\" />;\r\n  }\r\n\r\n  return (\r\n      <Box fill={true}\r\n      justify=\"center\"\r\n      alignContent=\"center\"\r\n      responsive={true}\r\n      wrap={true} \r\n      >\r\n\r\n    <Form validate=\"blur\" onSubmit={handleOnSubmit}>\r\n    <Box margin=\"small\">\r\n      <Text size=\"large\" alignSelf=\"center\">\r\n        Var vänlig välj fraktsätt\r\n      </Text>\r\n      {FraktData.map(frakt => (\r\n        <Box key={frakt.namn} margin={{ vertical: \"medium\" }} responsive={true}>\r\n          <RadioButton\r\n            name=\"shippingmethod\"\r\n            value={frakt.namn}\r\n            checked={selected === frakt.namn}\r\n            label={frakt.namn}\r\n            onChange={e => {\r\n              if (e.target.checked) {\r\n                setSelected(frakt.namn);\r\n                setShipping(frakt as any);\r\n              }\r\n            }}\r\n          ></RadioButton>\r\n\r\n          <Box direction=\"row\" gap=\"small\">\r\n            <Text>{frakt.beskrivning}</Text>\r\n          </Box>\r\n\r\n          <Box direction=\"row\" gap=\"small\">\r\n            <Text>Pris: {frakt.pris} :-</Text>\r\n          </Box>\r\n          <Box direction=\"row\" gap=\"small\">\r\n            <Text>Leveransdatum: {leveransDatum(frakt.days)}</Text>\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n        <Button type=\"submit\" value=\"submit\" label=\"Nästa\" primary={true} color=\"buttons\" />\r\n    </Box>\r\n </Form>\r\n </Box>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const UserDataContext = React.createContext<User>({\r\n    userData: {} as UserData,\r\n    setName: () => {},\r\n    setEmail: () => {},\r\n    setTelefon: () => {},\r\n    setAddress: () => {},\r\n    setZipCode: () => {},\r\n    setCity: () => {},\r\n});\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n  \r\ninterface UserData {\r\n    name: string;\r\n    email: string;\r\n    telefon: string;\r\n    address: string;\r\n    zipCode: string;\r\n    city: string;\r\n}\r\n\r\ninterface User {\r\n    userData: UserData;\r\n    setName: (name: string) => void;\r\n    setEmail: (email: string) => void;\r\n    setTelefon: (telefon: string) => void;\r\n    setAddress: (address: string) => void;\r\n    setZipCode: (zipCode: string) => void;\r\n    setCity: (city: string) => void;\r\n}\r\n\r\nexport function UserDataProvider(props: Props) {\r\n    const [userData, setUserData] = useState<UserData>({\r\n        name: \"\",\r\n        email: \"\",\r\n        telefon: \"\",\r\n        address: \"\",\r\n        zipCode: \"\",\r\n        city: \"\",\r\n    })\r\n\r\n    console.log(\"state\", userData);\r\n    \r\n    const setName = (name: string) => setUserData({ ...userData, name })\r\n    const setEmail = (email: string) => setUserData({ ...userData, email })\r\n    const setTelefon = (telefon: string) => setUserData({ ...userData, telefon})\r\n    const setAddress = (address: string) => setUserData({ ...userData, address })\r\n    const setZipCode = (zipCode: string) => setUserData({ ...userData, zipCode })\r\n    const setCity = (city: string) => setUserData({ ...userData, city })\r\n\r\n\r\n\r\n    return (\r\n        <UserDataContext.Provider value={{ userData, setName, setEmail, setTelefon, setAddress, setZipCode, setCity }}>\r\n            {props.children}\r\n        </UserDataContext.Provider>\r\n    )\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { Box, Form, FormField, Button } from \"grommet\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserDataContext } from \"../contexts/UserDataContext\";\r\n\r\nexport default function UserData() {\r\n  const {\r\n    userData,\r\n    setName,\r\n    setEmail,\r\n    setAddress,\r\n    setTelefon,\r\n    setCity,\r\n    setZipCode\r\n  } = useContext(UserDataContext);\r\n\r\n  const [gotToNextStep, setgoToNextStep] = useState(false);\r\n  function handleOnSubmit() {\r\n    setgoToNextStep(true);\r\n  }\r\n\r\n  if (gotToNextStep) {\r\n    return <Redirect to=\"/fraktform\" />;\r\n  }\r\n\r\n  return (\r\n    <Box style={{margin: \"0.5rem\"}} align=\"center\" responsive={true} fill={true} justify=\"center\">\r\n      <Form validate=\"submit\" onSubmit={handleOnSubmit}>\r\n        <FormField\r\n          name=\"name\"\r\n          label=\"Namn\"\r\n          required={true}\r\n          type=\"text\"\r\n          value={userData.name}\r\n          onChange={e => setName(e.target.value)}\r\n          validate={{ regexp: /^[a-öA-Ö]/, message: \"Använd bokstäver\" }}\r\n        />\r\n\r\n        <FormField\r\n          name=\"address\"\r\n          label=\"Adress\"\r\n          value={userData.address}\r\n          onChange={e => setAddress(e.target.value)}\r\n          required={true}\r\n          validate={{ regexp: /^[a-öA-ö]/, message: \"Använd bokstäver\" }}\r\n        />\r\n\r\n        <FormField\r\n          name=\"zipcode\"\r\n          label=\"Postnummer\"\r\n          value={userData.zipCode}\r\n          onChange={e => setZipCode(e.target.value)}\r\n          required={true}\r\n          validate={{\r\n            regexp: /^[0-9]{0,9}$/,\r\n            message: \"Använd siffror mellan 0-9\"\r\n          }}\r\n        />\r\n\r\n        <FormField\r\n          name=\"telefon\"\r\n          label=\"Telefonnummer\"\r\n          value={userData.telefon}\r\n          onChange={e => setTelefon(e.target.value)}\r\n          required={true}\r\n          validate={{\r\n            regexp: /^[0-9+-]{0,15}$/,\r\n            message: \"Använd siffror mellan 0-9\"\r\n          }}\r\n        />\r\n\r\n        <FormField\r\n          label=\"Stad\"\r\n          name=\"City\"\r\n          value={userData.city}\r\n          onChange={e => setCity(e.target.value)}\r\n          required={true}\r\n          validate={{ regexp: /^[a-öA-ö]/, message: \"Använd bokstäver\" }}\r\n        />\r\n\r\n        <FormField\r\n          label=\"Mail\"\r\n          name=\"email\"\r\n          value={userData.email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          required={true}\r\n        />\r\n\r\n        <Button\r\n          value=\"submit\"\r\n          fill=\"horizontal\"\r\n          type=\"submit\"\r\n          label=\"Nästa\"\r\n          primary={true}\r\n          color=\"buttons\"\r\n        />\r\n      </Form>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  useContext,\r\n  CSSProperties\r\n} from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  FormField,\r\n  RadioButtonGroup,\r\n  Form,\r\n  Button,\r\n  MaskedInput,\r\n  ResponsiveContext,\r\n  Image\r\n} from \"grommet\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserDataContext } from \"../contexts/UserDataContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { ShippingContext } from \"../contexts/ShippingContext\";\r\nimport { CreateOrder } from \"../MockedAPI\";\r\n\r\ninterface Props {}\r\n\r\nexport const Payment = (props: Props) => {\r\n  const [value, setValue] = useState(\"Faktura\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [cardnr, setCardNr] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [isComplete, setComplete] = useState(false)\r\n\r\n  const { userData } = useContext(UserDataContext);\r\n  const { cart, totalCost } = useContext(CartContext);\r\n  const { shippingData } = useContext(ShippingContext);\r\n\r\n\r\n  const totalCostAllTogether = shippingData.selectedShipping.pris + totalCost;\r\n\r\n\r\n\r\n  if (isComplete) {\r\n    return <Redirect to=\"/beställningsbekräftelse\" />\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size => (\r\n        <Box style={flexStyle}align=\"center\">\r\n          <RadioButtonGroup\r\n            margin=\"medium\"\r\n            name=\"betalningssätt\"\r\n            options={[\"Faktura\", \"Swish\", \"Kort\"]}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value)}\r\n          />\r\n          {value === \"Faktura\" && (\r\n            <Box width={size === \"xsmall\" ? \"small\" : \"medium\"} margin=\"medium\">\r\n              <Form>\r\n                <FormField\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  autoComplete=\"on\"\r\n                  label=\"Mail\"\r\n                  type=\"email\"\r\n                  required={true}\r\n                />\r\n              </Form>\r\n            </Box>\r\n          )}\r\n          {value === \"Swish\" && (\r\n            <Box width=\"small\" margin=\"medium\">\r\n              <Form validate=\"blur\">\r\n                <FormField\r\n                  name=\"tel\"\r\n                  autoComplete=\"on\"\r\n                  label=\"Telefonnummer\"\r\n                  value={userData.telefon}\r\n                  required={true}\r\n                  validate={{\r\n                    regexp: /^[0-9+-]{0,15}$/,\r\n                    message: \"Använd siffror mellan 0-9\"\r\n                  }}\r\n                />\r\n                <br />\r\n              </Form>\r\n            </Box>\r\n          )}\r\n          {value === \"Kort\" && (\r\n            <Box width={size === \"xsmall\" ? \"small\" : \"medium\"} margin=\"medium\">\r\n              <Form validate=\"blur\">\r\n                <Text size={size === \"xsmall\" ? \"small\" : \"medium\"}>Namn</Text>\r\n                <FormField\r\n                  name=\"cc-name\"\r\n                  value={userData.name}\r\n                  autoComplete=\"on\"\r\n                  // label=\"Namn\"\r\n                  required={true}\r\n                  type=\"text\"\r\n                  validate={{\r\n                    regexp: /^[a-öA-Ö]/,\r\n                    message: \"Använd bokstäver\"\r\n                  }}\r\n                />\r\n              </Form>\r\n              <br />\r\n              <Text size={size === \"xsmall\" ? \"small\" : \"medium\"}>\r\n                Giltighetsdatum\r\n              </Text>\r\n              <MaskedInput\r\n                name=\"cc-exp\"\r\n                autoComplete=\"on\"\r\n                size={size === \"xsmall\" ? \"small\" : \"medium\"}\r\n                mask={[\r\n                  {\r\n                    length: [1],\r\n                    options: [\r\n                      \"1\",\r\n                      \"2\",\r\n                      \"3\",\r\n                      \"4\",\r\n                      \"5\",\r\n                      \"6\",\r\n                      \"7\",\r\n                      \"8\",\r\n                      \"9\",\r\n                      \"10\",\r\n                      \"11\",\r\n                      \"12\"\r\n                    ],\r\n                    regexp: /^1[1-2]$|^[0-9]$/,\r\n                    placeholder: \"mm\"\r\n                  },\r\n                  { fixed: \"/\" },\r\n                  {\r\n                    length: 2,\r\n                    options: [\r\n                      \"2020\",\r\n                      \"2021\",\r\n                      \"2022\",\r\n                      \"2023\",\r\n                      \"2024\",\r\n                      \"2025\",\r\n                      \"2026\"\r\n                    ],\r\n                    regexp: /^[0-2][0-9]$|^[0-9]$/,\r\n                    placeholder: \"yy\"\r\n                  }\r\n                ]}\r\n                value={date}\r\n                onChange={event => setDate(event.target.value)}\r\n              />\r\n              <br />\r\n\r\n              <Text size={size === \"xsmall\" ? \"small\" : \"medium\"}>\r\n                Kortnummer\r\n              </Text>\r\n              <MaskedInput\r\n                name=\"cc-number\"\r\n                autoComplete=\"on\"\r\n                size={size === \"xsmall\" ? \"small\" : \"medium\"}\r\n                mask={[\r\n                  {\r\n                    length: 4,\r\n                    regexp: /^[0-9]{1,4}$/,\r\n                    placeholder: \"xxxx\"\r\n                  },\r\n                  { fixed: \" \" },\r\n                  {\r\n                    length: 4,\r\n                    regexp: /^[0-9]{1,4}$/,\r\n                    placeholder: \"xxxx\"\r\n                  },\r\n                  { fixed: \" \" },\r\n                  {\r\n                    length: 4,\r\n                    regexp: /^[0-9]{1,4}$/,\r\n                    placeholder: \"xxxx\"\r\n                  },\r\n                  { fixed: \" \" },\r\n                  {\r\n                    length: 4,\r\n                    regexp: /^[0-9]{1,4}$/,\r\n                    placeholder: \"xxxx\"\r\n                  }\r\n                ]}\r\n                value={cardnr}\r\n                onChange={event => setCardNr(event.target.value)}\r\n              />\r\n              <br />\r\n              <Text size={size === \"xsmall\" ? \"small\" : \"medium\"}>CVC</Text>\r\n\r\n              <MaskedInput\r\n                name=\"cc-csc\"\r\n                autoComplete=\"on\"\r\n                size={size === \"xsmall\" ? \"small\" : \"medium\"}\r\n                mask={[\r\n                  {\r\n                    length: 3,\r\n                    regexp: /^[0-9]{1,3}$/,\r\n                    placeholder: \"xxx\"\r\n                  }\r\n                ]}\r\n              />\r\n              <br />\r\n            </Box>\r\n          )}\r\n          <Box align=\"center\">\r\n          totalkostnad: {totalCostAllTogether}:-\r\n          \r\n            <Button\r\n              margin=\"medium\"\r\n              type=\"submit\"\r\n              label=\"Bekräfta köp\"\r\n              primary={true}\r\n              disabled={isLoading}\r\n              color=\"buttons\"\r\n              onClick={() => {\r\n                setLoading(true)\r\n                CreateOrder(cart, userData, shippingData.selectedShipping).then(resolve => {\r\n                  setComplete(true)                \r\n                })\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            {cart.map(item => (\r\n              <Box\r\n                width=\"small\"\r\n                height=\"small\"\r\n                margin=\"small\"\r\n                elevation=\"medium\"\r\n                responsive\r\n              >\r\n                <Text>\r\n                  {item.product.title + \"   \"}\r\n                  {item.product.price + \" :- /st\"}\r\n                </Text>\r\n\r\n                <Image src={item.product.mainImg} fit=\"cover\" />\r\n                <div>\r\n                  <Text>Antal: {item.count}</Text>\r\n                </div>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </ResponsiveContext.Consumer>\r\n  );\r\n};\r\n\r\nconst flexStyle: CSSProperties = {\r\n  display: \"flex\",\r\n  flexGrow: 1,\r\n  minHeight: \"90%\"\r\n}\r\n\r\n","export function CreateOrder(cart: any, userData: any, selectedShipping: any ) {\r\n  // TODO: when implementing a backend use the arguments to process the order..\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(\"Din order gick igenom\");\r\n    }, 3000);\r\n  });\r\n}\r\n","import React, { useContext, useEffect, useState, CSSProperties } from \"react\";\r\nimport { Text, Heading, Box, Image, ResponsiveContext } from \"grommet\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { ShippingContext } from \"../contexts/ShippingContext\";\r\n\r\nexport const Beställningsbekräftelse = () => {\r\n  const { totalCost, cart, clearCart } = useContext(CartContext);\r\n  const { setShipping, shippingData } = useContext(ShippingContext);\r\n  \r\n  // Save to local state so we can clear the cart context\r\n  const [ totalCostSaved ] = useState(totalCost);\r\n  const [ cartSaved ] = useState(cart);\r\n\r\n\r\n  const totalCostAllTogether = shippingData.selectedShipping.pris + totalCostSaved;\r\n  \r\n  \r\n  const leveransDatum = (days: number) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + days);\r\n    return date.toLocaleDateString();\r\n  };\r\n  const ordernr = (max: number) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  };\r\n\r\n  // ComponentDidMount equivialent\r\n  useEffect(() => {\r\n    clearCart();\r\n  }, [])\r\n\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size =>(\r\n    <Box style={flexStyle}align=\"center\" margin=\"medium\" gap=\"small\">\r\n      <Heading>Tack för din order!</Heading>\r\n      <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>Ditt ordernr är: {ordernr(2839873)} </Text>\r\n      <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>Den totala summan på din order blev: {totalCostAllTogether} :- </Text>\r\n      <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>\r\n        Din order kommer att finnas tillhanda den: {leveransDatum(shippingData.selectedShipping.days)}\r\n      </Text>\r\n      <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>En sammanfattning av din order kan du se här: </Text>\r\n      <Box fill={true} align=\"center\">\r\n        {cartSaved.map(item => (\r\n          <Box\r\n            width=\"small\"\r\n            height=\"small\"\r\n            margin=\"small\"\r\n            elevation=\"medium\"\r\n            responsive\r\n          >\r\n            <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>\r\n              {item.product.title + \"   \"}\r\n              {item.product.price + \" :- /st\"}\r\n            </Text>\r\n\r\n            <Box>\r\n              <Text size={size===\"xsmall\" ? \"small\": \"medium\"}>Antal: {item.count}</Text>\r\n              <Image src={item.product.mainImg} fit=\"cover\" />\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n    )}\r\n</ResponsiveContext.Consumer>\r\n  );\r\n};\r\n\r\nconst flexStyle: CSSProperties = {\r\n  display: \"flex\",\r\n  flexGrow: 1,\r\n  minHeight: \"90%\"\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Grommet } from \"grommet\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport MainContent from \"./components/MainContent\";\r\nimport { CartPage } from \"./components/CartPage\";\r\nimport { ProductPage } from \"./components/ProductPage\";\r\nimport { CartProvider } from \"./contexts/CartContext\";\r\nimport OmOss from \"./components/OmOss\";\r\nimport FraktForm from \"./components/FraktForm\";\r\nimport UserData from \"./components/UserData\";\r\nimport { Payment } from \"./components/Payment\";\r\nimport { Beställningsbekräftelse } from \"./components/Beställningsbekräftelse\";\r\nimport { UserDataProvider } from \"./contexts/UserDataContext\";\r\nimport { ShippingDataProvider } from \"./contexts/ShippingContext\";\r\nimport \"./index.css\"\r\n\r\nconst theme = {\r\n  global: {\r\n    breakpoints: {\r\n      xsmall: {\r\n        value: 500\r\n      },\r\n      small: {\r\n        value: 900\r\n      },\r\n      medium: {\r\n        value: 1000\r\n      }\r\n    },\r\n    focus: {\r\n      border: {\r\n        color: \"#d7ccc8\"\r\n      }\r\n    },\r\n    colors: {\r\n      header: \"#d7ccc8\",\r\n      footer: \"#d7ccc8\",\r\n      icons: \"#8c7b75\",\r\n      text: \"black\",\r\n      navbar: \"#d7ccc8\",\r\n      buttons: \"#a1887f\"\r\n    },\r\n    font: {\r\n      family: \"Baloo 2, cursive\",\r\n      size: \"18px\",\r\n      height: \"20px\"\r\n    }\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/Miniprojekt2\">\r\n      <ShippingDataProvider>\r\n        <UserDataProvider>\r\n          <CartProvider>\r\n            <Grommet theme={theme} full>\r\n              <Header />\r\n              <Switch>\r\n                <Route path=\"/\" exact component={MainContent} />\r\n                <Route path=\"/productpage/:id\" component={ProductPage} />\r\n                <Route path=\"/cartpage/\" component={CartPage} />\r\n                <Route path=\"/omoss\" component={OmOss} />\r\n                <Route path=\"/userdata\" component={UserData} />\r\n                <Route path=\"/fraktform\" component={FraktForm} />\r\n                <Route path=\"/payment\" component={Payment} />\r\n                <Route\r\n                  path=\"/beställningsbekräftelse\"\r\n                  component={Beställningsbekräftelse}\r\n                />\r\n              </Switch>\r\n              <Footer />\r\n            </Grommet>\r\n          </CartProvider>\r\n        </UserDataProvider>\r\n      </ShippingDataProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}